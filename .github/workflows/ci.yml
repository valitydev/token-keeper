name: Erlang Service CI

on:
  push:
    branches:
      - 'master'
      - 'epic/**'
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update environment variables
        run: grep -v '^#' .env >> $GITHUB_ENV

      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build/*/lib
          key: ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-build-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-build-

      - name: Compile
        run: make wc-compile

  check:
    name: Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update environment variables
        run: grep -v '^#' .env >> $GITHUB_ENV

      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build/*/lib
          key: ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-build-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-build-
      
      - name: Check formatting
        run: make wc-check-format
      
      - name: Run linting
        run: make wc-lint

      - name: Run xref
        run: make wc-xref

  dialyze:
    name: Dialyze
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update environment variables
        run: grep -v '^#' .env >> $GITHUB_ENV

      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build/*/lib
          key: ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-build-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-build-

      - name: Cache PLTs
        uses: actions/cache@v2
        with:
          path: _build/test/rebar3_*_plt
          key: ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-plt-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-otp-${{ env.OTP_VERSION }}-plt-      

      - name: Run dialyzer
        run: make wc-dialyze

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update environment variables
        run: grep -v '^#' .env >> $GITHUB_ENV

      - name: Setup BEAM
        uses: erlef/setup-beam@v1.10
        with:
          otp-version: ${{ env.OTP_VERSION }}
          rebar3-version: ${{ env.REBAR_VERSION }}

      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build/*/lib
          key: ${{ runner.os }}-otp-${{ inputs.otp-version }}-build-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-otp-${{ inputs.otp-version }}-build-

      - name: Setup Thrift compiler
        uses: valitydev/action-setup-thrift@v0.0.5
        with:
          thrift-version: ${{ env.THRIFT_VERSION }}
      
      - name: Run EUnit
        run: rebar3 eunit --cover

      # - name: Run CT
      #   id: run-common-test
      #   run: make wdeps-common-test

      - name: Run CommonTest (/w docker-compose)
        id: run-common-test
        env:
          DEV_IMAGE_TAG: token-keeper-dev
          # OTP_VERSION: ${{ inputs.otp-version }}
          # THRIFT_VERSION: ${{ inputs.thrift-version }}
          COMPOSE_DOCKER_CLI_BUILD: true
          DOCKER_BUILDKIT: true
        run: |
          docker-compose run --use-aliases --rm token-keeper rebar3 ct --cover

      - name: Store CT Logs
        if: ${{ failure() && steps.run-common-test.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: ct-logs
          path: _build/test/logs

      - name: Run test coverage analysis
        run: rebar3 covertool generate

      - name: Upload coverage statistics
        uses: codecov/codecov-action@v2
        with:
          files: _build/test/covertool/*.covertool.xml
